# -*- coding: utf-8 -*-
"""Copy of UserBehavior.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QL6ulvT6FeDaQpblvcaho-tBiIi-kaOf
"""

import pandas as pd
import numpy as np
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

df = pd.read_csv('user_behavior_dataset.csv')

scaler = StandardScaler()
X = scaler.fit_transform(df[['App Usage Time (min/day)', 'Screen On Time (hours/day)', 'Battery Drain (mAh/day)', 'Number of Apps Installed', 'Data Usage (MB/day)']])

wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)

import matplotlib.pyplot as plt
plt.plot(range(1, 11), wcss)
plt.title('Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

n_clusters = 4
kmeans = KMeans(n_clusters=n_clusters, init='k-means++', random_state=42)
y_kmeans = kmeans.fit_predict(X)

df['Cluster'] = y_kmeans

print('Cluster centroids:')
for i in range(n_clusters):
    print(f'Cluster {i}: {kmeans.cluster_centers_[i]}')

print('\nCluster sizes:')
print(df.groupby('Cluster').size())

print('\nCluster demographics:')
print(df.groupby('Cluster')[['Age']].agg(['mean', 'count']))  # Only include numeric columns for 'mean'
print(df.groupby('Cluster')[['Gender']].agg(['count']))  # Use 'count' for categorical columns like 'Gender'

for cluster in range(n_clusters):
    cluster_data = df[df['Cluster'] == cluster]
    print(f'\nPersonalization for Cluster {cluster}:')
    print(f"- Avg App Usage Time: {cluster_data['App Usage Time (min/day)'].mean():.2f} min/day")
    print(f"- Avg Screen On Time: {cluster_data['Screen On Time (hours/day)'].mean():.2f} hours/day")
    print(f"- Avg Battery Drain: {cluster_data['Battery Drain (mAh/day)'].mean():.2f} mAh/day")
    print(f"- Avg Apps Installed: {cluster_data['Number of Apps Installed'].mean():.2f}")
    print(f"- Avg Data Usage: {cluster_data['Data Usage (MB/day)'].mean():.2f} MB/day")
    print(f"- Predominant Age: {cluster_data['Age'].mode().values[0]}")
    print(f"- Predominant Gender: {cluster_data['Gender'].mode().values[0]}")







